Primary
Secondary
Tertiary
Quaternary
Quinary
secondary, tertiary, and quaternary layers

   


I believe that record is held by the codepoint U+FBF9 (ÔØπ), ‚ÄúARABIC LIGATURE UIGHUR KIRGHIZ YEH WITH HAMZA ABOVE WITH ALEF MAKSURA ISOLATED FORM,‚Äù which is 83 characters. There are a couple of other Arabic ligatures that are close to that count, as well.
The next longest name for a different sort of character is U+1F502 (üîÇ), ‚ÄúCLOCKWISE RIGHTWARDS AND LEFTWARDS OPEN CIRCLE ARROWS WITH CIRCLED ONE OVERLAY‚Äù which is 78 characters.





Add a "py.typed" file
https://devblogs.microsoft.com/python/pylance-introduces-five-new-features-that-enable-type-magic-for-python-developers/






LATIN CAPITAL LETTER A WITH RING ABOVE = 212B
LATIN CAPITAL LETTER ETH = 0
LATIN CAPITAL LETTER O WITH STROKE
LATIN SMALL LETTER SHARP S
LATIN SMALL LETTER AE






# Random notes


Rexex parser: Adds support for wildcard searches using '*'.


command core
only the basics here
use on web server or as external library




b binary:
+ includes it
- excludes it (NOT)

WHERE pig AND dog
WHERE NOT pig AND dog
WHERE pig AND NOT dog
WHERE NOT pig AND NOT dog
WHERE pig OR dog
WHERE NOT pig OR dog
WHERE pig OR NOT dog
WHERE NOT pig OR NOT dog



s symbol:
& puts it into AND group
| puts it into OR group

if set empty, use true
WHERE TRUE AND TRUE
WHERE (pig AND dog) AND TRUE
WHERE TRUE AND (cat OR frog)
WHERE (pig AND dog) AND (cat OR frog)

& = ()&()
| = ()|()


(a & B) | (C | D)

a b c d
A & B & C & D
a -b c -d
A & !B & C & !D

+a +b +c +d
A & B & C & D
+a -b +c -d
A & !B & C & !D

&&abc
(a&(b&c))
&&abc
((a)&(b))&(c)
&|abc
((a)|(b))&(c)

|&a|bcde
abc|d&e|
(((a & (b | c)) & d) | e)


eye
	brown
	red


t tag

sbt

&+fish

reserved
*:?

+-
|&

does white space matter?
no

steps
0 user input
1 strip out all illegal characters. pass over each character and move to new buffer if valid
>2 convert invalid characters to valid character in new buffer
3 remove all whitespace. separate items to token groups
4 apply found symbols to new class. when hit tag, previously applied attributes are used. otherwise defaults used. state set each time new symbol seen, so in essence, last one seen used



filename:
sha3 512 base 16
sha3_512__18446744073709551616





development install
unittest
pytest

The key words ‚ÄúMUST‚Äù, ‚ÄúMUST NOT‚Äù, ‚ÄúREQUIRED‚Äù, ‚ÄúSHALL‚Äù, ‚ÄúSHALL NOT‚Äù, ‚ÄúSHOULD‚Äù, ‚ÄúSHOULD NOT‚Äù, ‚ÄúRECOMMENDED‚Äù, ‚ÄúMAY‚Äù, and ‚ÄúOPTIONAL‚Äù in this document are to be interpreted as described in RFC 2119.

https://semver.org/

https://libraries.io/

celestine.readthedocs.io
celestine.rtfd.io 




PACKAGE
python -m pip install --upgrade pip
python -m pip install --upgrade build
python -m pip install --upgrade twine
python -m build
python -m twine check --strict dist/*


# test
python -m twine upload --verbose --repository testpypi dist/*
python -m pip install --index-url https://test.pypi.org/simple/ --no-deps celestine
python -m pip install --index-url https://test.pypi.org/simple/ celestine


# real
python -m twine upload --verbose dist/*
python -m pip install celestine

INSTALL
pip install pytest
pip install coverage



SHELL COMMAND
# quick test
python -m pytest

# test code used
python -m coverage run --source=celestine/application/unittest --module pytest --verbose

python -m coverage run --source=tests --module pytest --verbose
python -m coverage report --show-missing
python -m coverage html

# source code used by test code
python -m coverage run --module pytest --verbose celestine/application/unittest
python -m coverage report --show-missing
python -m coverage html

# source code used
python -m coverage run --source=celestine --module pytest --verbose celestine/application/unittest
python -m coverage report --show-missing
python -m coverage html




pip install more-itertools
pip install pylint

requests
uuid

AZURE API for translationts




python -m pip install --requirement requirements.txt

python -m pip install windows-curses

UniCurses 1.2 ??


https://packaging.python.org/en/latest/tutorials/installing-packages/#requirements-for-installing-packages


GUI to try:
pip install wxPython
pip install pygame
pip install Kivy


PACKAGE
where packages that change functionality, mostly guis
no fallback support. either it works or not
typically only one of these would be run ever, and only 1 at once


EXTENSION
is where extra packages can be installed for more functionality
will try to provide fallback options so every feature "works"
idea is all of them would be installed usually


ToDo Features:
Add gamma to photos? Both TK and dearpygui support this






make theme folder for various window apearances.
could also use different packages

3 gui (2 mouse 1 terminal)
comand line








	m n s g
	M 	N 	S 	G
M 
N 

m  true
n false
g both
s neighr

and	M	N	S	G
M	M	N	S	G
N	N	N	N	N
S	S	N	
G	G	N


not
N	M
S	G
G	S
M	N




and	N	S	G	M
N	N	N	N	N
S	N			S
G	N			G
M	N	S	G	M


OR	N	S	G	M
N	N	S	G	N
S	S	S	G?	M
G	G	G?	G	M
M	M	M	M	M




and	N	S	G	M
N	N	N	N	N
S	N	S	N	S
G	N	N	G	G
M	N	S	G	M


OR	N	S	G	M
N	N	S	G	M
S	S	S	M	M
G	G	M	G	M
M	M	M	M	M




and	N	S	G	M
N	N	N	N	N
S	N	S	N	S
G	N	N	G	G
M	N	S	G	M


OR	N	S	G	M
N	N	N	M	M
S	N	S	M	M
G	M	M	G	M
M	M	M	M	M





++
-+
--
+-

true
both
anti
zero



1
2
dual	having two parts	
null	not important	value 0		meaningless
4

both	some



not
M	N
N	M
S	G
G	S


and		M	N	S	G	
						
M		M	N	S	G	
N		N	N	N	N	
S		S	N	S		
G		G	N		G	


or		M	N	S	G	
						
M		M	M	M	M	
N		M	N	S	G	
S		M	S	S		
G		M	G		G	




and		M	S	G	N	
						
M		M	S	G	N	
S		S	S	G	N	
G		G	G	G	N	
N		N	N	N	N	


or		M	S	G	N	
						
M		M	M	M	M	
S		M	S	S	S	
G		M	S	G	G	
N		M	S	G	N	




and		M	G	S	N	
						
M		M	G	S	N	
G		G	G	S	N	
S		S	S	S	N	
N		N	N	N	N	


or		M	G	S	N	
						
M		M	M	M	M	
G		M	G	G	G	
S		M	G	S	S	
N		M	G	S	N	



